apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.geekmk.newsapp"
        minSdkVersion rootProject.ext.minSDKVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "API_KEY", "\"0a2d44192d1c4659bcfda9137ebf7459\""
        buildConfigField "String", "BASE_URL", "\"https://newsapi.org/v2/\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    //android libs
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.ext.constraintLayoutVersion}"
    implementation "com.google.android.material:material:${rootProject.ext.materialDesignVersion}"

    //moshi
    implementation "com.squareup.moshi:moshi-kotlin:${rootProject.ext.moshiKotlinVersion}"
    implementation "com.squareup.moshi:moshi-adapters:${rootProject.ext.moshiKotlinVersion}"

    //dagger2
    implementation "com.google.dagger:dagger-android:${rootProject.ext.dagger2Version}"
    kapt "com.google.dagger:dagger-compiler:${rootProject.ext.dagger2Version}"
    kapt "com.google.dagger:dagger-android-processor:${rootProject.ext.dagger2Version}"

    //Room
    implementation "androidx.room:room-runtime:${rootProject.ext.archRoomVersion}"
    implementation "androidx.room:room-rxjava2:${rootProject.ext.archRoomVersion}"
    kapt "androidx.room:room-compiler:${rootProject.ext.archRoomVersion}"
    testImplementation "androidx.arch.core:core-testing:$archRoomVersion"

    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:${rootProject.ext.archRoomVersion}"
    kapt "androidx.lifecycle:lifecycle-compiler:${rootProject.ext.archRoomVersion}"

    //RxJava 2 LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:${rootProject.ext.archRoomVersion}"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-moshi:${rootProject.ext.moshiConverterVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.rxJavaAdapterVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.httpLoggingInterceporVersion}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${rootProject.ext.okhttpVersion}"

    //RxJava RxAndroid
    implementation "io.reactivex.rxjava2:rxjava:${rootProject.ext.rxJava2Version}"
    implementation "io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxAndroidVersion}"

    //picasso
    implementation "com.squareup.picasso:picasso:${rootProject.ext.picassoVersion}"
    implementation 'jp.wasabeef:picasso-transformations:2.2.1'

    //test
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxTest"
    androidTestImplementation "androidx.test:core:$androidxTest"
    androidTestImplementation "androidx.test:rules:$androidxTestRules"
}
